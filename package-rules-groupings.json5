{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  packageRules: [
    {
      "matchUpdateTypes": ["minor", "patch"],
      "matchCurrentVersion": "!/^0/",
      "automerge": true
    },
    {
      matchFileNames: [
        'aqua.yaml',
        'registry.yaml',
        'aqua/aqua.yaml',
        'aqua/registry.yaml',
        '.aqua/aqua.yaml',
        '.aqua/registry.yaml',
      ],
      groupName: '‚¨ÜÔ∏è aqua-packages',
      commitMessageTopic: '‚¨ÜÔ∏è aqua-packages',
      prPriority: -1,
      automerge: true,
    },
    {
      matchPackageNames: [
        'aquaproj/aqua-installer',
      ],
      automerge: false,
      commitMessageTopic: '‚á° aqua-installer',
      groupName: 'aqua-installer',
    },
    {
      matchManagers: ['custom.regex'],
      matchDepNames: ['aquaproj/aqua'],
      groupName: '‚¨ÜÔ∏è aqua-packages',
    },
    {
      matchPackageNames: [
        'dagger/dagger',
      ],
      groupName: '‚¨ÜÔ∏è dagger',
      commitMessageTopic: '‚¨ÜÔ∏è dagger',
      automerge: true,
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
    },
    {
      matchFileNames: [
        'dagger/**',
      ],
      groupName: '‚¨ÜÔ∏è dagger'
    },
    {
      matchManagers: ['custom.regex'],
      matchDepNames: ['dagger/dagger'],
      groupName: '‚¨ÜÔ∏è dagger',
    },
    {
      matchCategories: ["docker"],
      automerge: true,
      commitMessageTopic: "‚¨ÜÔ∏è docker üê≥ {{depName}}",
      groupName: 'docker',
    },
    {
      matchManagers: [
        'dockerfile',
        'docker-compose',
      ],
      groupName: 'docker',
      commitMessageTopic: '‚¨ÜÔ∏è docker',
      automerge: true,
    },
    {
      matchManagers: [
        'github-actions',
      ],
      groupName: 'github-actions',
      commitMessageTopic: '‚¨ÜÔ∏è github-actions',
      automerge: true,
      prPriority: -1,
      prBodyDefinitions: {
        Package: '[{{{depName}}}](https://github.com/{{{depName}}})',
        Change: '[`{{{displayFrom}}}` -> `{{{displayTo}}}`](https://github.com/{{{depName}}}/compare/{{{displayFrom}}}...{{{displayTo}}})',
      },
      prBodyColumns: [
        'Package',
        'Change',
        'Type',
        'Update',
      ],
    },
    {
      matchDatasources: ['golang-version'],
      rangeStrategy: 'bump', // opt-in to golang version updates
    },
    {
      matchPackageNames: [
        'golang.org/x',
      ],
      groupName: '‚¨ÜÔ∏è go-x',
      commitMessageTopic: '‚¨ÜÔ∏è golang.org/x packages',
      automerge: true,
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      prPriority: -1,
    },
    {
      matchManagers: [
        'gomod',
      ],
      description: 'reduce noise by grouping all gomod major changes together',
      commitMessageTopic: '‚¨ÜÔ∏è gomod major',
      groupName: 'gomod-major',
      matchUpdateTypes: [
        'major',
      ],
    },
    {
      matchManagers: [
        'gomod',
      ],
      description: 'reduce noise by grouping all gomod patch, minor, and digest changes together',
      commitMessageTopic: '‚¨ÜÔ∏è gomod patching',
      groupName: 'gomod-patch-and-minor',
      matchUpdateTypes: [
        'patch',
        'minor',
        'digest',
      ],
    },
    {
      matchPackageNames: [
        'kubernetes/kubectl',
        'kubernetes/kubernetes',
        'k8s.io/api',
        'k8s.io/apimachinery',
        'k8s.io/client-go',
      ],
      groupName: 'kubernetes',
      commitMessageTopic: '‚¨ÜÔ∏è ‚ò∏Ô∏è kubernetes {{depName}}',
    },
    {
      matchManagers: [
        'nodenv',
        'npm',
      ],
      groupName: 'npm',
      commitMessageTopic: '‚¨ÜÔ∏è node, npm',
      automerge: true,
    },
    {
      matchManagers: [
        'terraform',
        'terraform-version',
        'terragrunt',
        'terragrunt-version',
        'tflint-plugin',
      ],
      groupName: 'terraform',
      commitMessageTopic: '‚¨ÜÔ∏è terraform',
      automerge: true,
    },
    {
      matchFileNames: [
        '.trunk/**',
      ],
      automerge: true,
      commitMessageTopic: '‚¨ÜÔ∏è trunk {{depName}}',
      groupName: 'trunk',
    },
  ],
}
